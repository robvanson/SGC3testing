<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="xhtml-default.css" type="text/css" media="screen, aural, print" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML Basic 1.1//EN"
    "http://www.w3.org/TR/xhtml-basic/xhtml-basic11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<link rel="shortcut icon" href="sgc.png" />
<meta http-equiv="Content-Language" content="en" />
<title lang="en" xml:lang="en" dir="ltr">Settings - SpeakGoodChinese</title>
<style>
body {
	background-image: url("Background.png");
	background-color: rgb(250,250,250);
    background-repeat: no-repeat;
    background-position: center center;
    background-attachment: fixed;}
h1 {
	text-align: center;
	}
button {
		position: fixed;
		overflow: hidden;
		text-overflow: clip clip;
		width:17%;
		height:15%;
		cursor:pointer; /*forces the cursor to change to a hand when the button is hovered*/
		text-align:center;
		font: bold 3vmin "Helvetica";
		background-color: rgb(220,220,220);
		
		-webkit-box-shadow: inset 0px 1px 0px #3e9cbf, 0px 5px 0px 0px #205c73, 0px 10px 5px #999;
		-moz-box-shadow: inset 0px 1px 0px #3e9cbf, 0px 5px 0px 0px #205c73, 0px 10px 5px #999;
		box-shadow: inset 0px 1px 0px #3e9cbf, 0px 5px 0px 0px #205c73, 0px 10px 5px #999;
		
		/*give the corners a small curve*/
		-moz-border-radius: 7px;
		-webkit-border-radius: 7px;
		border-radius: 7px;
		}

</style>

<meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no" />

<script type="text/javascript" src="internationalization_tables.js" ></script>   
</head>
<body onload="window.onresize();" onfocus="load_SGC3_settings (); " onblur="store_SGC3_settings ();" onunload="store_SGC3_settings (); localStorage.removeItem('settingsWindow');">
<!--
SpeakGoodChinese 3
Copyright (C) 2016 R.J.J.H. van Son (r.j.j.h.vanson@gmail.com)

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You can find a copy of the GNU General Public License at
http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
-->
	<div id='headertitle' style='position: center; font-size: 3vmin; '>
		<h2 style='text-align: center' id="title">
		SpeakGoodChinese 3 <br />
		Shuō hǎo Zhōngwén <br />
		说好中文
		</h2>
	</div>
	<div style="position: fixed; color: black; bottom: 70%; left: 5%; height: 8%; width: 17%; font: 'Helvetica'; font-size: 3vmin; text-align: center " id="LanguageCaption">---</div>	
	<select id="Language" style="position: fixed; color: black; bottom: 65%; left: 5%; height: 8%; width: 17%; font: 'Helvetica'; font-size: 3vmin ; background-color: rgb(220,220,220); " onchange="sgc3_settings.language = change_configLanguage(); store_SGC3_settings (); " >
		<option value="---" ><span id="LanguageCaption2" title="" >---</span></option>
	</select> 

	<div style="position: fixed; color: black; bottom: 70%; left: 25%; height: 8%; width: 17%; font: 'Helvetica'; font-size: 3vmin; text-align: center " id="RegisterCaption">---</div>	
	<select id="Register" style="position: fixed; color: black; bottom: 65%; left: 25%; height: 8%; width: 17%; font: 'Helvetica'; font-size: 3vmin; background-color: rgb(220,220,220); " onchange="sgc3_settings.register = getRegister(); store_SGC3_settings (); " >
		<option value="---" ><span id="RegisterCaption2" title="" >---</span></option>
	</select> 

	<div title=""><button type="button" style="color: black; bottom: 65%; left: 45%; height: 8%;" id="LocalSynthesis" ><span id="Synthesis_eSpeak" >Synthesis</span></button></div>
	
	<div style="background-color: rgb(220,220,220); position: fixed; color: black; bottom: 55%; left: 25%; height: 6%; width: 17%; font-size: 3vmin; text-align: center; " id="LocalStrict" title="">
		<span id="Recognition" style="vertical-align: middle; " >---</span> 
		<select id="Strict"  style="font-size: 2vmin; vertical-align: middle; background-color: rgb(220,220,220);" onchange="sgc3_settings.strict = getStrict(); store_SGC3_settings (); ">
			<option value="-1"><span id="StrictPost" style="vertical-align: middle; " >---</span></option> 
			<option value="0">0</option><option value="1">1</option><option value="2">2</option><option value="3">3</option>
		</select>
	</div>
	
	<div style="background-color: rgb(220,220,220); position: fixed; color: black; bottom: 55%; left: 45%; height: 6%; width: 17%; font-size: 3vmin; text-align: center; " id="LocalRecordingTime" title="">
		<span id="RecordingTimeCaption" style="vertical-align: middle; " >---</span> 
		<select id="RecordingTime"  style="font-size: 2vmin; vertical-align: middle; background-color: rgb(220,220,220);" onchange="sgc3_settings.recSecs = getRecordingTime(); store_SGC3_settings (); ">
			<option value="2">2</option><option value="3">3</option><option value="4">4</option><option value="5">5</option><option value="10">10</option>
		</select>
		<span id="RecordingTimePost" style="vertical-align: middle; " >---</span> 
	</div>
	
	<div title=""><button type="button" style="color: black; bottom: 65%; left: 65%; height: 8%" id="ShuffleListsButton" ><span id="ShuffleLists" >Synthesis</span></button></div>

    <script type="text/javascript">
	//<![CDATA[
	var mainWindow = localStorage.mainWindow;
	
	var localSynthesis = document.getElementById('LocalSynthesis');
	var localRecordingTime = document.getElementById('RecordingTime');
	var localStrict = document.getElementById('Strict');

	var shuffleListsButton = document.getElementById('ShuffleListsButton');

	
	// Global settings
	var sgc3_settings = {
		settingsRead: "false",
		recSecs: 3,
		ttsSpeed: 110,
		ttsVariant: "f3",
		shuffleLists: true,
		register: 249, // Must match Register_249 Id
		wordList: "20 basic tone combinations",
		language: "",
		synthesis_eSpeak: false,
		strict: 1
	};
	
	// Store settings
	function store_SGC3_settings () {
		sgc3_settings.settingsRead = "true";
		for (x in sgc3_settings) {
			localStorage[x] = sgc3_settings[x];
		};
	};
	
	function load_SGC3_settings () {
		for (x in sgc3_settings) {
			if (localStorage[x]) sgc3_settings[x] = localStorage[x];
		};
		
		set_configLanguage (sgc3_settings.language);
		setRegister (sgc3_settings.register);
		setRecordingTime (sgc3_settings.recSecs);
		setStrict (sgc3_settings.strict);

		localRecordingTime.value = sgc3_settings.recSecs;
		localStrict.value = sgc3_settings.strict;
		store_SGC3_settings.settingsRead = "true";
	};
	
	// Initialize to stored settings
	load_SGC3_settings ();
	
	// Set language (make that selectable)
	if (!sgc3_settings.language) {
		sgc3_settings.language = (userLanguage) ? userLanguage : "EN";
	};
	set_configLanguage (sgc3_settings.language);

	// Wordlists
	shuffleListsButton	
	if (sgc3_settings.shuffleLists == "true") {
		shuffleListsButton.style.color = "red";
		shuffleListsButton.background = "rgb(256,245,245)";
	};
	
	shuffleListsButton.onclick = function () {
		if (sgc3_settings.shuffleLists == "false") {
			sgc3_settings.shuffleLists = "true";
			shuffleListsButton.style.color = "red";
			shuffleListsButton.background = "rgb(232,210,210)";
		} else {
			sgc3_settings.shuffleLists = "false";
			shuffleListsButton.style.color = "black";
			shuffleListsButton.background = "rgb(220,220,220)";
		};
		store_SGC3_settings ();
	};

	// Set TTS
	if (sgc3_settings.synthesis_eSpeak != "false") {
		localSynthesis.style.color = "red";
		localSynthesis.background = "rgb(256,245,245)";
	};
	
	localSynthesis.onclick = function () {
		if (sgc3_settings.synthesis_eSpeak == "false") {
			sgc3_settings.synthesis_eSpeak = "true";
			localSynthesis.style.color = "red";
			localSynthesis.background = "rgb(232,210,210)";
		} else {
			sgc3_settings.synthesis_eSpeak = "false";
			localSynthesis.style.color = "black";
			localSynthesis.background = "rgb(220,220,220)";
		};
		store_SGC3_settings ();
	};
	
	
	function getTTSvoice(){
		var selectedVoice;
		if (window.speechSynthesis) {
			var voices = window.speechSynthesis.getVoices();
			if (! voices) voices = window.speechSynthesis.getVoices();
			for (x = 0; x < voices.length; ++x) {
				if (voices[x].lang == "zh-CN") { 
					voiceZH_CN = x;
					selectedVoice = voices[x];
				};
			};
		}
		return selectedVoice;
	}
	
	// Recording time
	function getRecordingTime () {
		var index = document.getElementById("RecordingTime").selectedIndex;
		var value = document.getElementById("RecordingTime").options[index].value;
		if (index <= 0) value = 3;
		return value;
	}
	
	function setRecordingTime (value) {
		for(var x = 0; x < document.getElementById("RecordingTime").options.length; ++ x) {
			if (document.getElementById("RecordingTime").options[x].value == value) {
				document.getElementById("RecordingTime").selectedIndex = x;
			};
		};
	};
	
	function getStrict () {
		var index = document.getElementById("Strict").selectedIndex;
		var value = document.getElementById("Strict").options[index].value;
		if (index < 1) {
			value = 0;
			document.getElementById("Strict").selectedIndex = 1;
		};
		return value;
	}
	
	function setStrict (value) {
		if (value < 0 || value > 3) value = 0;
		for(var x = 0; x < document.getElementById("Strict").options.length; ++ x) {
			if (document.getElementById("Strict").options[x].value == value) {
				document.getElementById("Strict").selectedIndex = x;
			};
		};
	};
	
	// Set Register
	setRegister (sgc3_settings.register);
	
	// Rescale texts when the window gets too small
	function resizeSelect () {
		var recognition = document.getElementById("Recognition").getBoundingClientRect();
		var strictRec = document.getElementById("Strict").getBoundingClientRect();
		if (strictRec.bottom > recognition.bottom) {
			document.getElementById("StrictPost").textContent = "-";
			document.getElementById("Recognition").style.fontSize = "2vmin";
		};
		var recordingTime = document.getElementById("RecordingTimeCaption").getBoundingClientRect();
		var recPost = document.getElementById("RecordingTimePost").getBoundingClientRect();
		if (recPost.bottom > recordingTime.bottom) {
			document.getElementById("RecordingTimePost").textContent = "";
		};
	};
	window.onresize = resizeSelect;
	//]]>	
	</script>

 
</body>
</html>
